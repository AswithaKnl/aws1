pipeline {
    agent any
    tools {
        maven "maven-3.9.8"
    }
    stages {
        stage('checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/AswithaKnl/samplejavappforpractice.git']])
            }
        }
        stage('SonarQube Analysis') {
            steps {
                // Ensure SonarQube Scanner is configured correctly
                withSonarQubeEnv('SonarQube-Scanner') {
                    script {
                        // Define the path to SonarQube Scanner
                        def scannerHome = tool name: 'SonarQube-Scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                        // Execute SonarQube Scanner with the necessary properties
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=sampleappjavapratice \
                            -Dsonar.projectName="Sample Java Application for Practice" \
                            -Dsonar.projectVersion=3.08 \
                            -Dsonar.sources=src/main/java \
                            -Dsonar.tests=src/test/java \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.sourceEncoding=UTF-8 \
                            -Dsonar.exclusions="**/test/**,**/generated/**" \
                            -Dsonar.inclusions="**/*.java"
                        """
                    }
                }
            }
        }
        stage('Quality Gate Check') {
            steps {
                script {
                    // Wait for the SonarQube analysis to finish and check the quality gate status
                    timeout(time: 1, unit: 'HOURS') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }
        // Additional stages can be added here (e.g., Build, Test, Deploy, etc.)
    }
}
